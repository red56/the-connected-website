<% form_for @post, :html => { :multipart => true } do | f | %>

	<%= error_messages_for(:post, :object => @post.has_attachment? ? [@post.attachment, @post] : @post ) %>

  <% if @post.specifying_upload  %>
		<%= link_to_function("Change the PDF", nil, :id => :change_pdf) do | page | 
          page[:change_pdf].hide
          page[:fileUploadArea].visual_effect(:appear)
        end unless @post.new_record?
    %>
    
	  <p class="fileUpload" id="fileUploadArea" <%= %Q{style="display:none"} unless @post.new_record? %>>
	    <label>Select a PDF file to upload</label>
	    <%= f.file_field :post_attachment %> 
	  </p>
		<%= hidden_field_tag("post[specifying_upload]", @post.specifying_upload) %>
	<% end %>
	
	
	<% if @post.specifying_video %>
		<p>
			<%= f.label :video, "YouTube video URL or the raw Embed-tag from any video/flash site" %>
			<%= f.text_area :video, :rows => 3 %>
		</p>
		<%= hidden_field_tag("post[specifying_video]", @post.specifying_video) %>
	<% end %>
  
	<p>
	  <%= f.label :title, "Title" %>
    <%= f.text_field :title, :class => :largeInput %>
  </p>
	  
  <% if @post.new_record? || !@post.display_as_images?%>

	<p class="<%= @post.specifying_upload || @post.specifying_video ? "description" : "Post" %>">
	  <%= f.label :detail, @post.specifying_upload || @post.specifying_video ? "Description" : "Text (idea, link, article, provocation)" %>
    <%= f.text_area :detail, :class => "mceEditor" %>
  </p>
  <% end %>

	<%= hidden_field_tag(:tag, @initial_tag.id) if @initial_tag  %>

  <p class="submitBlock">
    <%= submit_tag  @post.specifying_upload ? "Upload file" : "Save post", :disable_with => "Saving..." %> or <%= link_to "Cancel", @post.new_record? ? new_post_url : @post %>
  </p> 
	

<% end %>